#!/usr/bin/env node

var CLI = require(__dirname + '/../lib/command-line').CommandLineInterface;
var commandLine = new CLI();
var fs = require('fs');
var path = require('path');
var BatchProcessor = require(__dirname + '/../lib/batch').Processor;

commandLine
  .usage('--source <path to SDF file> [options]')
  .option('-s, --source <path to SDF file>',
          'The path to a file which contains the SDF data you want to upload.',
          String)
  .option('-d, --domain-name <domain name>',
          'The name of the domain that you are updating. Required.',
          String)
  .parse();

commandLine.assertHaveDomainName();
commandLine.assertDomainExists();

if (!commandLine.options.source) {
  console.log('You must specify the source SDF.');
  return process.exit(1);
}

var sourceFile = CLI.resolve(commandLine.options.source);
console.log('Processing: %s', sourceFile);

if (!path.existsSync(sourceFile)) {
  console.log('No such file');
  return process.exit(1);
}

var format = sourceFile.match(/\.(xml|json)$/i);
if (!format) {
  console.log('Unknown format');
  return process.exit(1);
}

format = format[1].toLowerCase();
console.log('Detected source format for %s as %s', path.basename(sourceFile), format)

if (format != 'json') {
  console.log('Unsupported format: %s');
  return process.exit(1);
}

try {
  var batches = fs.readFileSync(sourceFile, 'UTF-8');
  batches = JSON.parse(batches);
  var processor = new BatchProcessor({
        context: commandLine.context,
        domain: commandLine.domain
      });

  try {
    processor.validate(batches);
  } catch (error) {
    console.log('Validation failed.');
    console.log(error.errors.join('\n'));
    return process.exit(1);
  }

  var result = processor.loadSync(batches);
  console.log('Status: %s', result.status);
  console.log('Added: %s', result.adds);
  console.log('Deleted: %s', result.deletes);

} catch(error) {
  console.log('Fatal error!');
  console.log(error.message + '\n' + error.stack);
  return process.exit(1);
}
