#!/usr/bin/env node

var CLI = require(__dirname + '/../lib/command-line').CommandLineInterface;
var commandLine = new CLI();

commandLine
  .option('-d, --domain-name <domain name>',
          'The name of the domain that you are creating. Required.',
          String)
  .option('-all, --show-all',
          'Display all available information for the domain, '
             + 'including configured fields.',
          String)
  .parse();

function report(domain) {
  console.log('=== Domain Summary ===');
  console.log('Domain Name: %s',
              domain.name);
  console.log('Document Service endpoint: %s',
              domain.getDocumentsEndpoint('localhost'));
  console.log('Search Service endpoint: %s',
              domain.getSearchEndpoint('localhost'));
  console.log('SearchInstanceType: %s',
              domain.searchInstanceType);
  console.log('SearchPartitionCount: %s',
              domain.searchPartitionCount);
  console.log('SearchInstanceCount: %s',
              domain.searchInstanceCount);
  console.log('Searchable Documents: %s',
              domain.searchableDocumentsCount);
  console.log('Current configuration changes require a call to ' +
                'IndexDocuments: %s',
              domain.requiresIndexDocuments ? 'Yes' : 'No' );

  console.log('');
  console.log('=== Domain Configuration ===');

  console.log('');
  console.log('Fields:');
  console.log('=======');
  domain.indexFields.forEach(function(field) {
    console.log('%s %s %s (%s)',
                field.name, field.status, field.type, field.options);
  });
  console.log('======================');
}

if (commandLine.options.domainName) {
  report(commandLine.domain);
} else {
  var domains = CLI.Domain.getAll(commandLine.context);
  domains.forEach(function(domain, index) {
    if (index) console.log('');
    report(domain);
  });
}
