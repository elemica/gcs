#!/usr/bin/env node

var gcsServer = require(__dirname + '/../lib/server');
var CLI = require(__dirname + '/../lib/command-line').CommandLineInterface;
var commandLine = new CLI();

commandLine
  .option('--database-path <path>',
          'database path' +
            '(GCS_DATABASE_PATH) ' +
            '[' + CLI.defaultDatabasePath + ']',
          String,
          CLI.defaultDatabasePath)
  .option('--base-host <hostname>',
          'The base host name assigned to the service ' +
            '(GCS_BASE_HOST) ' +
            '[' + CLI.defaultBaseHost + ']',
          String,
          CLI.defaultBaseHost)
  .option('-p, --port <port>',
          'The port number assigned to the service' +
            '(GCS_PORT) ' +
            '[' + CLI.defaultPort + ']',
          Number,
          0)
  .option('--privilege <ip range>',
          'list of IP ranges for privileged client ' +
            '(GCS_PRIVILEGED_RANGES) ' +
            '[' + CLI.defaultPrivilegedRanges + ']',
          String,
          CLI.defaultPrivilegedRanges)
  .option('--access-log-path <path>',
          'path to the access log' +
            '(GCS_ACCESS_LOG_PATH) ' +
            '[' + CLI.defaultAccessLogPath + ']',
          String,
          CLI.defaultAccessLogPath)
  .option('--query-log-path <path>',
          'path to the query log' +
            '(GCS_QUERY_LOG_PATH) ' +
            '[' + CLI.defaultQueryLogPath + ']',
          String,
          CLI.defaultQueryLogPath)
  .option('--error-log-path <path>',
          'path to the error log' +
            '(GCS_ERROR_LOG_PATH) ' +
            '[' + CLI.defaultErrorLogPath + ']',
          String,
          CLI.defaultErrorLogPath)
  .parse();

var server = gcsServer.createServer({
      databasePath:      commandLine.options.databasePath,
      accessLogPath:     commandLine.options.accessLogPath,
      queryLogPath:      commandLine.options.queryLogPath,
      errorLogPath:      commandLine.options.errorLogPath,
      privilegedRanges:  commandLine.options.privilege,
      port:              commandLine.port,
      baseHost:          commandLine.baseHost,
      configurationHost: commandLine.options.configurationHost
    });

server.listen(commandLine.port, function() {
  console.log('gcs listening at %d', commandLine.port);
  console.log('database is at %s', commandLine.options.databasePath);
  console.log('privileged IP ranges are %s', commandLine.options.privilege);
});
