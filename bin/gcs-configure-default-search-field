#!/usr/bin/env node

var CLI = require(__dirname + '/../lib/command-line').CommandLineInterface;
var commandLine = new CLI();

commandLine
  .option('-d, --domain-name <domain name>',
          'The name of the domain that you are configuring. Required.',
          String)
  .option('--name <field name>',
          'The name of the field you want to set as the default search field. ' +
          'It becomes blank if you omit this option',
          String)
  .parse();

commandLine.assertHaveDomainName();

var domainName = commandLine.domainName;
var fieldName = commandLine.hasOption('name') && commandLine.options.name;
commandLine.assertDomainExistsHTTP(function() {
  if (fieldName) {
    commandLine.getIndexFieldStatus(domainName, fieldName, function(error, field) {
      if (field) {
        console.log('Setting "%s" as the default search field of "%s"...',
                    fieldName,
                    domainName);
        commandLine.configurationAPI.UpdateDefaultSearchField(
          { DefaultSearchField: fieldName },
          function(error, result) {
            if (error)
              commandLine.raiseFatalError(error);
            console.log('Done.');
            process.exit(0);
          }
        );
      } else {
        console.log('"%s" is not a field of "%s".',
                    fieldName,
                    domainName);
        process.exit(1);
      }
    });
  } else {
    console.log('Resetting the default search field of "%s"...',
                domainName);
    commandLine.configurationAPI.UpdateDefaultSearchField(
      { DefaultSearchField: '' },
      function(error, result) {
        if (error)
          commandLine.raiseFatalError(error);
        console.log('Done.');
        process.exit(0);
      }
    );
  }
});
